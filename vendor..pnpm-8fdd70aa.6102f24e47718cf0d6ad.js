(self.webpackChunkpixijs_game=self.webpackChunkpixijs_game||[]).push([[42],{3052:(t,e,n)=>{var i;!function(){function s(t,e,n){return t.call.apply(t.bind,arguments)}function r(t,e,n){if(!t)throw Error();if(2<arguments.length){var i=Array.prototype.slice.call(arguments,2);return function(){var n=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(n,i),t.apply(e,n)}}return function(){return t.apply(e,arguments)}}function o(t,e,n){return(o=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?s:r).apply(null,arguments)}var a=Date.now||function(){return+new Date};function l(t,e){this.a=t,this.o=e||t,this.c=this.o.document}var c=!!window.FontFace;function h(t,e,n,i){if(e=t.c.createElement(e),n)for(var s in n)n.hasOwnProperty(s)&&("style"==s?e.style.cssText=n[s]:e.setAttribute(s,n[s]));return i&&e.appendChild(t.c.createTextNode(i)),e}function u(t,e,n){(t=t.c.getElementsByTagName(e)[0])||(t=document.documentElement),t.insertBefore(n,t.lastChild)}function f(t){t.parentNode&&t.parentNode.removeChild(t)}function g(t,e,n){e=e||[],n=n||[];for(var i=t.className.split(/\s+/),s=0;s<e.length;s+=1){for(var r=!1,o=0;o<i.length;o+=1)if(e[s]===i[o]){r=!0;break}r||i.push(e[s])}for(e=[],s=0;s<i.length;s+=1){for(r=!1,o=0;o<n.length;o+=1)if(i[s]===n[o]){r=!0;break}r||e.push(i[s])}t.className=e.join(" ").replace(/\s+/g," ").replace(/^\s+|\s+$/,"")}function A(t,e){for(var n=t.className.split(/\s+/),i=0,s=n.length;i<s;i++)if(n[i]==e)return!0;return!1}function p(t,e,n){function i(){a&&s&&r&&(a(o),a=null)}e=h(t,"link",{rel:"stylesheet",href:e,media:"all"});var s=!1,r=!0,o=null,a=n||null;c?(e.onload=function(){s=!0,i()},e.onerror=function(){s=!0,o=Error("Stylesheet failed to load"),i()}):setTimeout((function(){s=!0,i()}),0),u(t,"head",e)}function d(t,e,n,i){var s=t.c.getElementsByTagName("head")[0];if(s){var r=h(t,"script",{src:e}),o=!1;return r.onload=r.onreadystatechange=function(){o||this.readyState&&"loaded"!=this.readyState&&"complete"!=this.readyState||(o=!0,n&&n(null),r.onload=r.onreadystatechange=null,"HEAD"==r.parentNode.tagName&&s.removeChild(r))},s.appendChild(r),setTimeout((function(){o||(o=!0,n&&n(Error("Script load timeout")))}),i||5e3),r}return null}function w(){this.a=0,this.c=null}function m(t){return t.a++,function(){t.a--,v(t)}}function y(t,e){t.c=e,v(t)}function v(t){0==t.a&&t.c&&(t.c(),t.c=null)}function x(t){this.a=t||"-"}function _(t,e){this.c=t,this.f=4,this.a="n";var n=(e||"n4").match(/^([nio])([1-9])$/i);n&&(this.a=n[1],this.f=parseInt(n[2],10))}function b(t){var e=[];t=t.split(/,\s*/);for(var n=0;n<t.length;n++){var i=t[n].replace(/['"]/g,"");-1!=i.indexOf(" ")||/^\d/.test(i)?e.push("'"+i+"'"):e.push(i)}return e.join(",")}function E(t){return t.a+t.f}function T(t){var e="normal";return"o"===t.a?e="oblique":"i"===t.a&&(e="italic"),e}function C(t){var e=4,n="n",i=null;return t&&((i=t.match(/(normal|oblique|italic)/i))&&i[1]&&(n=i[1].substr(0,1).toLowerCase()),(i=t.match(/([1-9]00|normal|bold)/i))&&i[1]&&(/bold/i.test(i[1])?e=7:/[1-9]00/.test(i[1])&&(e=parseInt(i[1].substr(0,1),10)))),n+e}function B(t,e){this.c=t,this.f=t.o.document.documentElement,this.h=e,this.a=new x("-"),this.j=!1!==e.events,this.g=!1!==e.classes}function P(t){if(t.g){var e=A(t.f,t.a.c("wf","active")),n=[],i=[t.a.c("wf","loading")];e||n.push(t.a.c("wf","inactive")),g(t.f,n,i)}k(t,"inactive")}function k(t,e,n){t.j&&t.h[e]&&(n?t.h[e](n.c,E(n)):t.h[e]())}function D(){this.c={}}function j(t,e){this.c=t,this.f=e,this.a=h(this.c,"span",{"aria-hidden":"true"},this.f)}function F(t){u(t.c,"body",t.a)}function I(t){return"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:"+b(t.c)+";font-style:"+T(t)+";font-weight:"+t.f+"00;"}function S(t,e,n,i,s,r){this.g=t,this.j=e,this.a=i,this.c=n,this.f=s||3e3,this.h=r||void 0}function V(t,e,n,i,s,r,o){this.v=t,this.B=e,this.c=n,this.a=i,this.s=o||"BESbswy",this.f={},this.w=s||3e3,this.u=r||null,this.m=this.j=this.h=this.g=null,this.g=new j(this.c,this.s),this.h=new j(this.c,this.s),this.j=new j(this.c,this.s),this.m=new j(this.c,this.s),t=I(t=new _(this.a.c+",serif",E(this.a))),this.g.a.style.cssText=t,t=I(t=new _(this.a.c+",sans-serif",E(this.a))),this.h.a.style.cssText=t,t=I(t=new _("serif",E(this.a))),this.j.a.style.cssText=t,t=I(t=new _("sans-serif",E(this.a))),this.m.a.style.cssText=t,F(this.g),F(this.h),F(this.j),F(this.m)}x.prototype.c=function(t){for(var e=[],n=0;n<arguments.length;n++)e.push(arguments[n].replace(/[\W_]+/g,"").toLowerCase());return e.join(this.a)},S.prototype.start=function(){var t=this.c.o.document,e=this,n=a(),i=new Promise((function(i,s){!function r(){a()-n>=e.f?s():t.fonts.load(function(t){return T(t)+" "+t.f+"00 300px "+b(t.c)}(e.a),e.h).then((function(t){1<=t.length?i():setTimeout(r,25)}),(function(){s()}))}()})),s=null,r=new Promise((function(t,n){s=setTimeout(n,e.f)}));Promise.race([r,i]).then((function(){s&&(clearTimeout(s),s=null),e.g(e.a)}),(function(){e.j(e.a)}))};var U={D:"serif",C:"sans-serif"},N=null;function O(){if(null===N){var t=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent);N=!!t&&(536>parseInt(t[1],10)||536===parseInt(t[1],10)&&11>=parseInt(t[2],10))}return N}function W(t,e,n){for(var i in U)if(U.hasOwnProperty(i)&&e===t.f[U[i]]&&n===t.f[U[i]])return!0;return!1}function R(t){var e,n=t.g.a.offsetWidth,i=t.h.a.offsetWidth;(e=n===t.f.serif&&i===t.f["sans-serif"])||(e=O()&&W(t,n,i)),e?a()-t.A>=t.w?O()&&W(t,n,i)&&(null===t.u||t.u.hasOwnProperty(t.a.c))?$(t,t.v):$(t,t.B):function(t){setTimeout(o((function(){R(this)}),t),50)}(t):$(t,t.v)}function $(t,e){setTimeout(o((function(){f(this.g.a),f(this.h.a),f(this.j.a),f(this.m.a),e(this.a)}),t),0)}function L(t,e,n){this.c=t,this.a=e,this.f=0,this.m=this.j=!1,this.s=n}V.prototype.start=function(){this.f.serif=this.j.a.offsetWidth,this.f["sans-serif"]=this.m.a.offsetWidth,this.A=a(),R(this)};var G=null;function M(t){0==--t.f&&t.j&&(t.m?((t=t.a).g&&g(t.f,[t.a.c("wf","active")],[t.a.c("wf","loading"),t.a.c("wf","inactive")]),k(t,"active")):P(t.a))}function X(t){this.j=t,this.a=new D,this.h=0,this.f=this.g=!0}function J(t,e,n,i,s){var r=0==--t.h;(t.f||t.g)&&setTimeout((function(){var t=s||null,a=i||{};if(0===n.length&&r)P(e.a);else{e.f+=n.length,r&&(e.j=r);var l,c=[];for(l=0;l<n.length;l++){var h=n[l],u=a[h.c],f=e.a,A=h;if(f.g&&g(f.f,[f.a.c("wf",A.c,E(A).toString(),"loading")]),k(f,"fontloading",A),f=null,null===G)if(window.FontFace){A=/Gecko.*Firefox\/(\d+)/.exec(window.navigator.userAgent);var p=/OS X.*Version\/10\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);G=A?42<parseInt(A[1],10):!p}else G=!1;f=G?new S(o(e.g,e),o(e.h,e),e.c,h,e.s,u):new V(o(e.g,e),o(e.h,e),e.c,h,e.s,t,u),c.push(f)}for(l=0;l<c.length;l++)c[l].start()}}),0)}function Y(t,e){this.c=t,this.a=e}function Q(t,e){this.c=t,this.a=e}function z(t,e){this.c=t||H,this.a=[],this.f=[],this.g=e||""}L.prototype.g=function(t){var e=this.a;e.g&&g(e.f,[e.a.c("wf",t.c,E(t).toString(),"active")],[e.a.c("wf",t.c,E(t).toString(),"loading"),e.a.c("wf",t.c,E(t).toString(),"inactive")]),k(e,"fontactive",t),this.m=!0,M(this)},L.prototype.h=function(t){var e=this.a;if(e.g){var n=A(e.f,e.a.c("wf",t.c,E(t).toString(),"active")),i=[],s=[e.a.c("wf",t.c,E(t).toString(),"loading")];n||i.push(e.a.c("wf",t.c,E(t).toString(),"inactive")),g(e.f,i,s)}k(e,"fontinactive",t),M(this)},X.prototype.load=function(t){this.c=new l(this.j,t.context||this.j),this.g=!1!==t.events,this.f=!1!==t.classes,function(t,e,n){var i=[],s=n.timeout;!function(t){t.g&&g(t.f,[t.a.c("wf","loading")]),k(t,"loading")}(e);i=function(t,e,n){var i,s=[];for(i in e)if(e.hasOwnProperty(i)){var r=t.c[i];r&&s.push(r(e[i],n))}return s}(t.a,n,t.c);var r=new L(t.c,e,s);for(t.h=i.length,e=0,n=i.length;e<n;e++)i[e].load((function(e,n,i){J(t,r,e,n,i)}))}(this,new B(this.c,t),t)},Y.prototype.load=function(t){function e(){if(r["__mti_fntLst"+i]){var n,s=r["__mti_fntLst"+i](),o=[];if(s)for(var a=0;a<s.length;a++){var l=s[a].fontfamily;null!=s[a].fontStyle&&null!=s[a].fontWeight?(n=s[a].fontStyle+s[a].fontWeight,o.push(new _(l,n))):o.push(new _(l))}t(o)}else setTimeout((function(){e()}),50)}var n=this,i=n.a.projectId,s=n.a.version;if(i){var r=n.c.o;d(this.c,(n.a.api||"https://fast.fonts.net/jsapi")+"/"+i+".js"+(s?"?v="+s:""),(function(s){s?t([]):(r["__MonotypeConfiguration__"+i]=function(){return n.a},e())})).id="__MonotypeAPIScript__"+i}else t([])},Q.prototype.load=function(t){var e,n,i=this.a.urls||[],s=this.a.families||[],r=this.a.testStrings||{},o=new w;for(e=0,n=i.length;e<n;e++)p(this.c,i[e],m(o));var a=[];for(e=0,n=s.length;e<n;e++)if((i=s[e].split(":"))[1])for(var l=i[1].split(","),c=0;c<l.length;c+=1)a.push(new _(i[0],l[c]));else a.push(new _(i[0]));y(o,(function(){t(a,r)}))};var H="https://fonts.googleapis.com/css";function Z(t){this.f=t,this.a=[],this.c={}}var q={latin:"BESbswy","latin-ext":"çöüğş",cyrillic:"йяЖ",greek:"αβΣ",khmer:"កខគ",Hanuman:"កខគ"},K={thin:"1",extralight:"2","extra-light":"2",ultralight:"2","ultra-light":"2",light:"3",regular:"4",book:"4",medium:"5","semi-bold":"6",semibold:"6","demi-bold":"6",demibold:"6",bold:"7","extra-bold":"8",extrabold:"8","ultra-bold":"8",ultrabold:"8",black:"9",heavy:"9",l:"3",r:"4",b:"7"},tt={i:"i",italic:"i",n:"n",normal:"n"},et=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;function nt(t,e){this.c=t,this.a=e}var it={Arimo:!0,Cousine:!0,Tinos:!0};function st(t,e){this.c=t,this.a=e}function rt(t,e){this.c=t,this.f=e,this.a=[]}nt.prototype.load=function(t){var e=new w,n=this.c,i=new z(this.a.api,this.a.text),s=this.a.families;!function(t,e){for(var n=e.length,i=0;i<n;i++){var s=e[i].split(":");3==s.length&&t.f.push(s.pop());var r="";2==s.length&&""!=s[1]&&(r=":"),t.a.push(s.join(r))}}(i,s);var r=new Z(s);!function(t){for(var e=t.f.length,n=0;n<e;n++){var i=t.f[n].split(":"),s=i[0].replace(/\+/g," "),r=["n4"];if(2<=i.length){var o;if(o=[],a=i[1])for(var a,l=(a=a.split(",")).length,c=0;c<l;c++){var h;if((h=a[c]).match(/^[\w-]+$/))if(null==(u=et.exec(h.toLowerCase())))h="";else{if(h=null==(h=u[2])||""==h?"n":tt[h],null==(u=u[1])||""==u)u="4";else var u=K[u]||(isNaN(u)?"4":u.substr(0,1));h=[h,u].join("")}else h="";h&&o.push(h)}0<o.length&&(r=o),3==i.length&&(o=[],0<(i=(i=i[2])?i.split(","):o).length&&(i=q[i[0]])&&(t.c[s]=i))}for(t.c[s]||(i=q[s])&&(t.c[s]=i),i=0;i<r.length;i+=1)t.a.push(new _(s,r[i]))}}(r),p(n,function(t){if(0==t.a.length)throw Error("No fonts to load!");if(-1!=t.c.indexOf("kit="))return t.c;for(var e=t.a.length,n=[],i=0;i<e;i++)n.push(t.a[i].replace(/ /g,"+"));return e=t.c+"?family="+n.join("%7C"),0<t.f.length&&(e+="&subset="+t.f.join(",")),0<t.g.length&&(e+="&text="+encodeURIComponent(t.g)),e}(i),m(e)),y(e,(function(){t(r.a,r.c,it)}))},st.prototype.load=function(t){var e=this.a.id,n=this.c.o;e?d(this.c,(this.a.api||"https://use.typekit.net")+"/"+e+".js",(function(e){if(e)t([]);else if(n.Typekit&&n.Typekit.config&&n.Typekit.config.fn){e=n.Typekit.config.fn;for(var i=[],s=0;s<e.length;s+=2)for(var r=e[s],o=e[s+1],a=0;a<o.length;a++)i.push(new _(r,o[a]));try{n.Typekit.load({events:!1,classes:!1,async:!0})}catch(t){}t(i)}}),2e3):t([])},rt.prototype.load=function(t){var e=this.f.id,n=this.c.o,i=this;e?(n.__webfontfontdeckmodule__||(n.__webfontfontdeckmodule__={}),n.__webfontfontdeckmodule__[e]=function(e,n){for(var s=0,r=n.fonts.length;s<r;++s){var o=n.fonts[s];i.a.push(new _(o.name,C("font-weight:"+o.weight+";font-style:"+o.style)))}t(i.a)},d(this.c,(this.f.api||"https://f.fontdeck.com/s/css/js/")+function(t){return t.o.location.hostname||t.a.location.hostname}(this.c)+"/"+e+".js",(function(e){e&&t([])}))):t([])};var ot=new X(window);ot.a.c.custom=function(t,e){return new Q(e,t)},ot.a.c.fontdeck=function(t,e){return new rt(e,t)},ot.a.c.monotype=function(t,e){return new Y(e,t)},ot.a.c.typekit=function(t,e){return new st(e,t)},ot.a.c.google=function(t,e){return new nt(e,t)};var at={load:o(ot.load,ot)};void 0===(i=function(){return at}.call(e,n,e,t))||(t.exports=i)}()},8967:(t,e,n)=>{"use strict";let i;async function s(){return i??(i=(async()=>{const t=document.createElement("canvas").getContext("webgl");if(!t)return"premultiply-alpha-on-upload";const e=await new Promise((t=>{const e=document.createElement("video");e.onloadeddata=()=>t(e),e.onerror=()=>t(null),e.autoplay=!1,e.crossOrigin="anonymous",e.preload="auto",e.src="data:video/webm;base64,GkXfo59ChoEBQveBAULygQRC84EIQoKEd2VibUKHgQJChYECGFOAZwEAAAAAAAHTEU2bdLpNu4tTq4QVSalmU6yBoU27i1OrhBZUrmtTrIHGTbuMU6uEElTDZ1OsggEXTbuMU6uEHFO7a1OsggG97AEAAAAAAABZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVSalmoCrXsYMPQkBNgIRMYXZmV0GETGF2ZkSJiEBEAAAAAAAAFlSua8yuAQAAAAAAAEPXgQFzxYgAAAAAAAAAAZyBACK1nIN1bmSIgQCGhVZfVlA5g4EBI+ODhAJiWgDglLCBArqBApqBAlPAgQFVsIRVuYEBElTDZ9Vzc9JjwItjxYgAAAAAAAAAAWfInEWjh0VOQ09ERVJEh49MYXZjIGxpYnZweC12cDlnyKJFo4hEVVJBVElPTkSHlDAwOjAwOjAwLjA0MDAwMDAwMAAAH0O2dcfngQCgwqGggQAAAIJJg0IAABAAFgA4JBwYSgAAICAAEb///4r+AAB1oZ2mm+6BAaWWgkmDQgAAEAAWADgkHBhKAAAgIABIQBxTu2uRu4+zgQC3iveBAfGCAXHwgQM=",e.load()}));if(!e)return"premultiply-alpha-on-upload";const n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,t.NONE),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,e);const s=new Uint8Array(4);return t.readPixels(0,0,1,1,t.RGBA,t.UNSIGNED_BYTE,s),t.deleteFramebuffer(i),t.deleteTexture(n),t.getExtension("WEBGL_lose_context")?.loseContext(),s[0]<=s[3]?"premultiplied-alpha":"premultiply-alpha-on-upload"})()),i}n.d(e,{C:()=>s})},3254:(t,e,n)=>{"use strict";n.d(e,{F:()=>s});var i=n(9738);const s=(i.A.default??i.A)(globalThis.navigator)},472:(t,e,n)=>{"use strict";n.d(e,{n:()=>s});var i=n(4184);function s(){const{userAgent:t}=i.e.get().getNavigator();return/^((?!chrome|android).)*safari/i.test(t)}},6579:(t,e,n)=>{"use strict";n.d(e,{M:()=>o});var i=n(4184),s=n(7778);let r;function o(t){return void 0!==r||(r=(()=>{const e={stencil:!0,failIfMajorPerformanceCaveat:t??s.k.defaultOptions.failIfMajorPerformanceCaveat};try{if(!i.e.get().getWebGLRenderingContext())return!1;let t=i.e.get().createCanvas().getContext("webgl",e);const n=!!t?.getContextAttributes()?.stencil;if(t){const e=t.getExtension("WEBGL_lose_context");e&&e.loseContext()}return t=null,n}catch(t){return!1}})()),r}},7290:(t,e,n)=>{"use strict";n.d(e,{V:()=>r});var i=n(4184);let s;async function r(t={}){return void 0!==s||(s=await(async()=>{const e=i.e.get().getNavigator().gpu;if(!e)return!1;try{const n=await e.requestAdapter(t);return await n.requestDevice(),!0}catch(t){return!1}})()),s}},502:(t,e,n)=>{"use strict";let i;function s(){if("boolean"==typeof i)return i;try{const t=new Function("param1","param2","param3","return param1[param2] === param3;");i=!0===t({a:"b"},"a","b")}catch(t){i=!1}return i}n.d(e,{f:()=>s})},6805:(t,e,n)=>{"use strict";n.d(e,{m:()=>o});var i=n(7474);function s(t,e,n){for(let i=0,s=4*n*e;i<e;++i,s+=4)if(0!==t[s+3])return!1;return!0}function r(t,e,n,i,s){const r=4*e;for(let e=i,o=i*r+4*n;e<=s;++e,o+=r)if(0!==t[o+3])return!1;return!0}function o(t,e=1){const{width:n,height:o}=t,a=t.getContext("2d",{willReadFrequently:!0});if(null===a)throw new TypeError("Failed to get canvas 2D context");const l=a.getImageData(0,0,n,o).data;let c=0,h=0,u=n-1,f=o-1;for(;h<o&&s(l,n,h);)++h;if(h===o)return i.M.EMPTY;for(;s(l,n,f);)--f;for(;r(l,n,c,h,f);)++c;for(;r(l,n,u,h,f);)--u;return++u,++f,new i.M(c/e,h/e,(u-c)/e,(f-h)/e)}},9300:(t,e,n)=>{"use strict";n.d(e,{xv:()=>i});n(413);const i="8.6.4"},3439:(t,e,n)=>{"use strict";n.d(e,{u:()=>i});class i{constructor(t){"number"==typeof t?this.rawBinaryData=new ArrayBuffer(t):t instanceof Uint8Array?this.rawBinaryData=t.buffer:this.rawBinaryData=t,this.uint32View=new Uint32Array(this.rawBinaryData),this.float32View=new Float32Array(this.rawBinaryData),this.size=this.rawBinaryData.byteLength}get int8View(){return this._int8View||(this._int8View=new Int8Array(this.rawBinaryData)),this._int8View}get uint8View(){return this._uint8View||(this._uint8View=new Uint8Array(this.rawBinaryData)),this._uint8View}get int16View(){return this._int16View||(this._int16View=new Int16Array(this.rawBinaryData)),this._int16View}get int32View(){return this._int32View||(this._int32View=new Int32Array(this.rawBinaryData)),this._int32View}get float64View(){return this._float64Array||(this._float64Array=new Float64Array(this.rawBinaryData)),this._float64Array}get bigUint64View(){return this._bigUint64Array||(this._bigUint64Array=new BigUint64Array(this.rawBinaryData)),this._bigUint64Array}view(t){return this[`${t}View`]}destroy(){this.rawBinaryData=null,this._int8View=null,this._uint8View=null,this._int16View=null,this.uint16View=null,this._int32View=null,this.uint32View=null,this.float32View=null}static sizeOf(t){switch(t){case"int8":case"uint8":return 1;case"int16":case"uint16":return 2;case"int32":case"uint32":case"float32":return 4;default:throw new Error(`${t} isn't a valid view type`)}}}},2705:(t,e,n)=>{"use strict";function i(t){let e=!1;for(const n in t)if(null==t[n]){e=!0;break}if(!e)return t;const n=Object.create(null);for(const e in t){const i=t[e];i&&(n[e]=i)}return n}function s(t){let e=0;for(let n=0;n<t.length;n++)null==t[n]?e++:t[n-e]=t[n];return t.length-=e,t}n.d(e,{s:()=>i,t:()=>s})},2510:(t,e,n)=>{"use strict";function i(t,e,n){const i=t.length;let s;if(e>=i||0===n)return;const r=i-(n=e+n>i?i-e:n);for(s=e;s<r;++s)t[s]=t[s+n];t.length=r}n.d(e,{d:()=>i})},4124:(t,e,n)=>{"use strict";n.d(e,{L:()=>s});const i={default:-1};function s(t="default"){return void 0===i[t]&&(i[t]=-1),++i[t]}},4579:(t,e,n)=>{"use strict";function i(t,e,n,i){const{width:s,height:r}=n.orig,o=n.trim;if(o){const n=o.width,a=o.height;t.minX=o.x-e._x*s-i,t.maxX=t.minX+n,t.minY=o.y-e._y*r-i,t.maxY=t.minY+a}else t.minX=-e._x*s-i,t.maxX=t.minX+s,t.minY=-e._y*r-i,t.maxY=t.minY+r}n.d(e,{y:()=>i})},9796:(t,e,n)=>{"use strict";n.d(e,{M:()=>r,d:()=>o});var i=n(9084),s=n(9300);class r{static init(){globalThis.__PIXI_APP_INIT__?.(this,s.xv)}static destroy(){}}r.extension=i.Ag.Application;class o{constructor(t){this._renderer=t}init(){globalThis.__PIXI_RENDERER_INIT__?.(this._renderer,s.xv)}destroy(){this._renderer=null}}o.extension={type:[i.Ag.WebGLSystem,i.Ag.WebGPUSystem],name:"initHook",priority:-10}},2597:(t,e,n)=>{"use strict";n.d(e,{Ek:()=>r,lj:()=>s,t6:()=>o});const i={},s="8.0.0",r="8.3.4";function o(t,e,n=3){if(i[e])return;let s=(new Error).stack;void 0===s?console.warn("PixiJS Deprecation Warning: ",`${e}\nDeprecated since v${t}`):(s=s.split("\n").splice(n).join("\n"),console.groupCollapsed?(console.groupCollapsed("%cPixiJS Deprecation Warning: %c%s","color:#614108;background:#fffbe6","font-weight:normal;color:#614108;background:#fffbe6",`${e}\nDeprecated since v${t}`),console.warn(s),console.groupEnd()):(console.warn("PixiJS Deprecation Warning: ",`${e}\nDeprecated since v${t}`),console.warn(s))),i[e]=!0}},8273:(t,e,n)=>{"use strict";n.d(e,{R:()=>r});let i=0;const s=500;function r(...t){i!==s&&(i++,i===s?console.warn("PixiJS Warning: too many warnings, no more warnings will be reported to the console by PixiJS."):console.warn("PixiJS Warning: ",...t))}},7766:(t,e,n)=>{"use strict";n.d(e,{t:()=>i});const i=()=>{}},9602:(t,e,n)=>{"use strict";n.d(e,{v:()=>s});var i=n(4942);function s(t,e=1){const n=i.x.RETINA_PREFIX?.exec(t);return n?parseFloat(n[1]):e}},2138:(t,e,n)=>{"use strict";n.d(e,{A:()=>o});var i=n(4184);function s(t){if("string"!=typeof t)throw new TypeError(`Path must be a string. Received ${JSON.stringify(t)}`)}function r(t){return t.split("?")[0].split("#")[0]}const o={toPosix(t){return e="\\",n="/",t.replace(new RegExp(e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),"g"),n);var e,n},isUrl(t){return/^https?:/.test(this.toPosix(t))},isDataUrl:t=>/^data:([a-z]+\/[a-z0-9-+.]+(;[a-z0-9-.!#$%*+.{}|~`]+=[a-z0-9-.!#$%*+.{}()_|~`]+)*)?(;base64)?,([a-z0-9!$&',()*+;=\-._~:@\/?%\s<>]*?)$/i.test(t),isBlobUrl:t=>t.startsWith("blob:"),hasProtocol(t){return/^[^/:]+:/.test(this.toPosix(t))},getProtocol(t){s(t),t=this.toPosix(t);const e=/^file:\/\/\//.exec(t);if(e)return e[0];const n=/^[^/:]+:\/{0,2}/.exec(t);return n?n[0]:""},toAbsolute(t,e,n){if(s(t),this.isDataUrl(t)||this.isBlobUrl(t))return t;const a=r(this.toPosix(e??i.e.get().getBaseUrl())),l=r(this.toPosix(n??this.rootname(a)));if((t=this.toPosix(t)).startsWith("/"))return o.join(l,t.slice(1));return this.isAbsolute(t)?t:this.join(a,t)},normalize(t){if(s(t),0===t.length)return".";if(this.isDataUrl(t)||this.isBlobUrl(t))return t;let e="";const n=(t=this.toPosix(t)).startsWith("/");this.hasProtocol(t)&&(e=this.rootname(t),t=t.slice(e.length));const i=t.endsWith("/");return(t=function(t,e){let n="",i=0,s=-1,r=0,o=-1;for(let a=0;a<=t.length;++a){if(a<t.length)o=t.charCodeAt(a);else{if(47===o)break;o=47}if(47===o){if(s===a-1||1===r);else if(s!==a-1&&2===r){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){const t=n.lastIndexOf("/");if(t!==n.length-1){-1===t?(n="",i=0):(n=n.slice(0,t),i=n.length-1-n.lastIndexOf("/")),s=a,r=0;continue}}else if(2===n.length||1===n.length){n="",i=0,s=a,r=0;continue}e&&(n.length>0?n+="/..":n="..",i=2)}else n.length>0?n+=`/${t.slice(s+1,a)}`:n=t.slice(s+1,a),i=a-s-1;s=a,r=0}else 46===o&&-1!==r?++r:r=-1}return n}(t,!1)).length>0&&i&&(t+="/"),n?`/${t}`:e+t},isAbsolute(t){return s(t),t=this.toPosix(t),!!this.hasProtocol(t)||t.startsWith("/")},join(...t){if(0===t.length)return".";let e;for(let n=0;n<t.length;++n){const i=t[n];if(s(i),i.length>0)if(void 0===e)e=i;else{const s=t[n-1]??"";this.joinExtensions.includes(this.extname(s).toLowerCase())?e+=`/../${i}`:e+=`/${i}`}}return void 0===e?".":this.normalize(e)},dirname(t){if(s(t),0===t.length)return".";let e=(t=this.toPosix(t)).charCodeAt(0);const n=47===e;let i=-1,r=!0;const o=this.getProtocol(t),a=t;for(let n=(t=t.slice(o.length)).length-1;n>=1;--n)if(e=t.charCodeAt(n),47===e){if(!r){i=n;break}}else r=!1;return-1===i?n?"/":this.isUrl(a)?o+t:o:n&&1===i?"//":o+t.slice(0,i)},rootname(t){s(t);let e="";if(e=(t=this.toPosix(t)).startsWith("/")?"/":this.getProtocol(t),this.isUrl(t)){const n=t.indexOf("/",e.length);e=-1!==n?t.slice(0,n):t,e.endsWith("/")||(e+="/")}return e},basename(t,e){s(t),e&&s(e),t=r(this.toPosix(t));let n,i=0,o=-1,a=!0;if(void 0!==e&&e.length>0&&e.length<=t.length){if(e.length===t.length&&e===t)return"";let s=e.length-1,r=-1;for(n=t.length-1;n>=0;--n){const l=t.charCodeAt(n);if(47===l){if(!a){i=n+1;break}}else-1===r&&(a=!1,r=n+1),s>=0&&(l===e.charCodeAt(s)?-1==--s&&(o=n):(s=-1,o=r))}return i===o?o=r:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!a){i=n+1;break}}else-1===o&&(a=!1,o=n+1);return-1===o?"":t.slice(i,o)},extname(t){s(t);let e=-1,n=0,i=-1,o=!0,a=0;for(let s=(t=r(this.toPosix(t))).length-1;s>=0;--s){const r=t.charCodeAt(s);if(47!==r)-1===i&&(o=!1,i=s+1),46===r?-1===e?e=s:1!==a&&(a=1):-1!==e&&(a=-1);else if(!o){n=s+1;break}}return-1===e||-1===i||0===a||1===a&&e===i-1&&e===n+1?"":t.slice(e,i)},parse(t){s(t);const e={root:"",dir:"",base:"",ext:"",name:""};if(0===t.length)return e;let n=(t=r(this.toPosix(t))).charCodeAt(0);const i=this.isAbsolute(t);let o;e.root=this.rootname(t),o=i||this.hasProtocol(t)?1:0;let a=-1,l=0,c=-1,h=!0,u=t.length-1,f=0;for(;u>=o;--u)if(n=t.charCodeAt(u),47!==n)-1===c&&(h=!1,c=u+1),46===n?-1===a?a=u:1!==f&&(f=1):-1!==a&&(f=-1);else if(!h){l=u+1;break}return-1===a||-1===c||0===f||1===f&&a===c-1&&a===l+1?-1!==c&&(e.base=e.name=0===l&&i?t.slice(1,c):t.slice(l,c)):(0===l&&i?(e.name=t.slice(1,a),e.base=t.slice(1,c)):(e.name=t.slice(l,a),e.base=t.slice(l,c)),e.ext=t.slice(a,c)),e.dir=this.dirname(t),e},sep:"/",delimiter:":",joinExtensions:[".html"]}},790:(t,e,n)=>{"use strict";n.d(e,{b:()=>i});class i{constructor(t,e){this._pool=[],this._count=0,this._index=0,this._classType=t,e&&this.prepopulate(e)}prepopulate(t){for(let e=0;e<t;e++)this._pool[this._index++]=new this._classType;this._count+=t}get(t){let e;return e=this._index>0?this._pool[--this._index]:new this._classType,e.init?.(t),e}return(t){t.reset?.(),this._pool[this._index++]=t}get totalSize(){return this._count}get totalFree(){return this._index}get totalUsed(){return this._count-this._index}clear(){this._pool.length=0,this._index=0}}},8143:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var i=n(790);const s=new class{constructor(){this._poolsByClass=new Map}prepopulate(t,e){this.getPool(t).prepopulate(e)}get(t,e){return this.getPool(t).get(e)}return(t){this.getPool(t.constructor).return(t)}getPool(t){return this._poolsByClass.has(t)||this._poolsByClass.set(t,new i.b(t)),this._poolsByClass.get(t)}stats(){const t={};return this._poolsByClass.forEach((e=>{const n=t[e._classType.name]?e._classType.name+e._classType.ID:e._classType.name;t[n]={free:e.totalFree,used:e.totalUsed,size:e.totalSize}})),t}}},9236:(t,e,n)=>{"use strict";n.d(e,{e:()=>o});var i=n(4184),s=n(9300);let r=!1;function o(t){if(!r){if(i.e.get().getNavigator().userAgent.toLowerCase().indexOf("chrome")>-1){const e=[`%c  %c  %c  %c  %c PixiJS %c v${s.xv} (${t}) http://www.pixijs.com/\n\n`,"background: #E72264; padding:5px 0;","background: #6CA2EA; padding:5px 0;","background: #B5D33D; padding:5px 0;","background: #FED23F; padding:5px 0;","color: #FFFFFF; background: #E72264; padding:5px 0;","color: #E72264; background: #FFFFFF; padding:5px 0;"];globalThis.console.log(...e)}else globalThis.console&&globalThis.console.log(`PixiJS ${s.xv} - ${t} - http://www.pixijs.com/`);r=!0}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,